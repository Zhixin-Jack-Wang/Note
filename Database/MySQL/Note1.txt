<> not equal operator

#compare date
birth_date > '1992-12-14'

#underscore
 LIKE '_y' matches single character like 'gy'

#REGEXP
    LIKE '%AVENUE%' === REGEXP 'AVENUE'

    ^ Beginning of a string (eg. REGEXP '^rose')
    $ End of a string   (eg. REGEXP 'son$')
    | Or (eg.REGEXP 'AVENUE|TRAIL' matches both )
    [] One of the character from the square bracket (eg. '[ame]i','[a-h]e')
    . Any character
    * Any number of times

#IS NULL
WHERE phone IS NULL
WHERE phone IS NOT NULL

#ORDER BY
    //sort by state first then sort by first_name
    ORDER BY state DESC,first_name   
    //1,2 corresponding to first and second selected column
    SELECT first_name, last_name
    ...
    ORDER BY 1,2            

#LIMIT CLAUSE
    //show top 3 records
    LIMIT 3
    //show 7-8 records, offset is 6
    LIMIT 6,2

#ALIAS
    SELECT ...
    FROM customers as c
    JOIN order as o
    ON ...

#JOIN across different databases
    //only prefix the one you are not using
    sql_store.order_items

#SELF-JOIN
    SELECT
	e.first_name, m.first_name 
    FROM
        employees e
    JOIN
        employees m
    ON 
        e.reports_to = m.employee_id

#Compound Join Conditions
    ON
        //CON1
    AND
        //CON2

# Using Clause
    //equal to ON c.customers_id = o.customers_id, column names must be exactly the same, can have compound condition(USING(customer_id,order_id))
    JOIN customers c
        USING (customers_id)

#Natural Join
    //database engine finds common columns and join 
    SELECT *
    FROM orders o 
   NATURAL JOIN customers c

#UNION
    use UNION clause to combine records from multiple queries,
    the column name in the first query decide what shows up in the results

#SELECT and set value
    //create a column named status and set its value to 'ARCHIVED'  
    SELECT 'ARCHIVED' AS status

#Column Attribute
    CHAR(50)--padding with extra space


#Inserting Hierarchical Rows
//use LAST_INSERT_ID()
INSERT INTO orders (customer_id, order_date, status)
VALUES (1, '2019-01-02', 1);

INSERT INTO order_items
VALUES
    (LAST_INSERT_ID(),1,1,2.95),
    (LAST_INSERT_ID(),1,1,2.95)